(deftheme monochrome
  "Created 2018-03-13.")

(custom-theme-set-variables
 'monochrome
 '(ansi-color-names-vector ["black" "light gray" "dark gray" "light slate gray"]))

(custom-theme-set-faces
 'monochrome
 '(cursor ((((class color) (min-colors 10)) (:background "light gray"))))
 '(fringe ((t (:background "light gray" :foreground "black"))))
 '(highlight ((((class color) (min-colors 10)) (:foreground "black" :background "light gray"))))
 '(region ((((class color) (min-colors 10)) (:foreground "black" :background "light gray"))))
 '(secondary-selection ((((class color) (min-colors 10)) (:foreground: "black" :background "light slate gray"))))
 '(isearch ((((class color) (min-colors 10)) (:foreground "black" :background "light gray"))))
 '(lazy-highlight ((((class color) (min-colors 10)) (:foreground "black" :background "light gray"))))
 '(trailing-whitespace ((((class color) (min-colors 10)) (:background "red"))))
 '(mode-line ((((class color) (min-colors 10)) (:box (:line-width -1 :style released-button) :background "#e5e5e5" :foreground "black"))))
 '(mode-line-inactive ((((class color) (min-colors 10)) (:box (:line-width -1 :style released-button) :background "#b0b0b0" :foreground "black"))))
 '(whitespace-empty ((((class color) (min-colors 10)) (:background unspecified :foreground "red"))))
 '(whitespace-line ((((class color) (min-colors 10)) (:background "light gray" :foreground "black"))))
 '(minibuffer-prompt ((((class color) (min-colors 10)) (:weight bold :foreground "light gray"))))
 '(escape-glyph ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(error ((((class color) (min-colors 10)) (:weight bold :slant italic :foreground "red"))))
 '(warning ((((class color) (min-colors 10)) (:foreground "yellow"))))
 '(success ((((class color) (min-colors 10)) (:foreground "green"))))
 '(font-lock-builtin-face ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(font-lock-comment-face ((((class color) (min-colors 10)) (:slant italic :foreground "dark gray"))))
 '(font-lock-constant-face ((((class color) (min-colors 10)) (:weight bold :foreground "light gray"))))
 '(font-lock-function-name-face ((((class color) (min-colors 10)) (:foreground "white"))))
 '(font-lock-keyword-face ((((class color) (min-colors 10)) (:weight bold :foreground "white"))))
 '(font-lock-string-face ((((class color) (min-colors 10)) (:foreground "light slate gray"))))
 '(font-lock-type-face ((((class color) (min-colors 10)) (:weight bold :foreground "light gray"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 10)) (:weight bold :foreground "light slate gray"))))
 '(font-lock-warning-face ((((class color) (min-colors 10)) (:foreground "yellow"))))
 '(link ((((class color) (min-colors 10)) (:underline t :foreground "light gray"))))
 '(link-visited ((((class color) (min-colors 10)) (:underline t :foreground "light gray"))))
 '(show-paren-match ((t (:background "light slate gray"))))
 '(show-paren-mismatch ((t (:background "red"))))
 '(ido-first-match ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(ido-only-match ((((class color) (min-colors 10)) (:underline "light gray" :foreground "light gray"))))
 '(ido-subdir ((((class color) (min-colors 10)) (:weight bold :foreground "white"))))
 '(message-header-name ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(message-header-cc ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(message-header-other ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(message-header-subject ((((class color) (min-colors 10)) (:foreground "light gray"))))
 '(message-header-to ((((class color) (min-colors 10)) (:weight bold :foreground "light gray"))))
 '(message-cited-text ((((class color) (min-colors 10)) (:slant italic :foreground "light gray"))))
 '(message-separator ((((class color) (min-colors 10)) (:weight bold :foreground "light gray"))))
 '(org-level-1 ((t (:bold t :foreground "light gray" :height 1.5))))
 '(org-level-2 ((t (:bold nil :foreground "light gray" :height 1.2))))
 '(org-level-3 ((t (:bold t :foreground "light gray" :height 1.0))))
 '(org-level-4 ((t (:bold nil :foreground "light gray" :height 1.0))))
 '(org-link ((t (:foreground "light slate gray" :underline t))))
 '(org-todo ((t (:bold t :foreground "red"))))
 '(org-done ((t (:bold t :foreground "green"))))
 '(default ((t (:background "#002b36" :foreground "light gray")))))

(provide-theme 'monochrome)
